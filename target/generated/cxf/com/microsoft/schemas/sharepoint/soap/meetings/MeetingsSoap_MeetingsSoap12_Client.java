
package com.microsoft.schemas.sharepoint.soap.meetings;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.0
 * 2012-11-05T11:03:10.468+01:00
 * Generated source version: 2.7.0
 * 
 */
public final class MeetingsSoap_MeetingsSoap12_Client {

    private static final QName SERVICE_NAME = new QName("http://schemas.microsoft.com/sharepoint/soap/meetings/", "Meetings");

    private MeetingsSoap_MeetingsSoap12_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = Meetings.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        Meetings ss = new Meetings(wsdlURL, SERVICE_NAME);
        MeetingsSoap port = ss.getMeetingsSoap12();  
        
        {
        System.out.println("Invoking setAttendeeResponse...");
        java.lang.String _setAttendeeResponse_attendeeEmail = "";
        long _setAttendeeResponse_recurrenceId = 0;
        java.lang.String _setAttendeeResponse_uid = "";
        long _setAttendeeResponse_sequence = 0;
        javax.xml.datatype.XMLGregorianCalendar _setAttendeeResponse_utcDateTimeOrganizerCriticalChange = null;
        javax.xml.datatype.XMLGregorianCalendar _setAttendeeResponse_utcDateTimeAttendeeCriticalChange = null;
        com.microsoft.schemas.sharepoint.soap.meetings.AttendeeResponse _setAttendeeResponse_response = null;
        port.setAttendeeResponse(_setAttendeeResponse_attendeeEmail, _setAttendeeResponse_recurrenceId, _setAttendeeResponse_uid, _setAttendeeResponse_sequence, _setAttendeeResponse_utcDateTimeOrganizerCriticalChange, _setAttendeeResponse_utcDateTimeAttendeeCriticalChange, _setAttendeeResponse_response);


        }
        {
        System.out.println("Invoking setWorkspaceTitle...");
        java.lang.String _setWorkspaceTitle_title = "";
        port.setWorkspaceTitle(_setWorkspaceTitle_title);


        }
        {
        System.out.println("Invoking addMeetingFromICal...");
        java.lang.String _addMeetingFromICal_organizerEmail = "";
        java.lang.String _addMeetingFromICal_icalText = "";
        com.microsoft.schemas.sharepoint.soap.meetings.AddMeetingFromICalResponse.AddMeetingFromICalResult _addMeetingFromICal__return = port.addMeetingFromICal(_addMeetingFromICal_organizerEmail, _addMeetingFromICal_icalText);
        System.out.println("addMeetingFromICal.result=" + _addMeetingFromICal__return);


        }
        {
        System.out.println("Invoking deleteWorkspace...");
        port.deleteWorkspace();


        }
        {
        System.out.println("Invoking getMeetingWorkspaces...");
        boolean _getMeetingWorkspaces_recurring = false;
        com.microsoft.schemas.sharepoint.soap.meetings.GetMeetingWorkspacesResponse.GetMeetingWorkspacesResult _getMeetingWorkspaces__return = port.getMeetingWorkspaces(_getMeetingWorkspaces_recurring);
        System.out.println("getMeetingWorkspaces.result=" + _getMeetingWorkspaces__return);


        }
        {
        System.out.println("Invoking restoreMeeting...");
        java.lang.String _restoreMeeting_uid = "";
        port.restoreMeeting(_restoreMeeting_uid);


        }
        {
        System.out.println("Invoking getMeetingsInformation...");
        long _getMeetingsInformation_requestFlags = 0;
        long _getMeetingsInformation_lcid = 0;
        com.microsoft.schemas.sharepoint.soap.meetings.GetMeetingsInformationResponse.GetMeetingsInformationResult _getMeetingsInformation__return = port.getMeetingsInformation(_getMeetingsInformation_requestFlags, _getMeetingsInformation_lcid);
        System.out.println("getMeetingsInformation.result=" + _getMeetingsInformation__return);


        }
        {
        System.out.println("Invoking createWorkspace...");
        java.lang.String _createWorkspace_title = "";
        java.lang.String _createWorkspace_templateName = "";
        long _createWorkspace_lcid = 0;
        com.microsoft.schemas.sharepoint.soap.meetings.TimeZoneInf _createWorkspace_timeZoneInformation = null;
        com.microsoft.schemas.sharepoint.soap.meetings.CreateWorkspaceResponse.CreateWorkspaceResult _createWorkspace__return = port.createWorkspace(_createWorkspace_title, _createWorkspace_templateName, _createWorkspace_lcid, _createWorkspace_timeZoneInformation);
        System.out.println("createWorkspace.result=" + _createWorkspace__return);


        }
        {
        System.out.println("Invoking removeMeeting...");
        long _removeMeeting_recurrenceId = 0;
        java.lang.String _removeMeeting_uid = "";
        long _removeMeeting_sequence = 0;
        javax.xml.datatype.XMLGregorianCalendar _removeMeeting_utcDateStamp = null;
        boolean _removeMeeting_cancelMeeting = false;
        port.removeMeeting(_removeMeeting_recurrenceId, _removeMeeting_uid, _removeMeeting_sequence, _removeMeeting_utcDateStamp, _removeMeeting_cancelMeeting);


        }
        {
        System.out.println("Invoking updateMeeting...");
        java.lang.String _updateMeeting_uid = "";
        long _updateMeeting_sequence = 0;
        javax.xml.datatype.XMLGregorianCalendar _updateMeeting_utcDateStamp = null;
        java.lang.String _updateMeeting_title = "";
        java.lang.String _updateMeeting_location = "";
        javax.xml.datatype.XMLGregorianCalendar _updateMeeting_utcDateStart = null;
        javax.xml.datatype.XMLGregorianCalendar _updateMeeting_utcDateEnd = null;
        boolean _updateMeeting_nonGregorian = false;
        port.updateMeeting(_updateMeeting_uid, _updateMeeting_sequence, _updateMeeting_utcDateStamp, _updateMeeting_title, _updateMeeting_location, _updateMeeting_utcDateStart, _updateMeeting_utcDateEnd, _updateMeeting_nonGregorian);


        }
        {
        System.out.println("Invoking addMeeting...");
        java.lang.String _addMeeting_organizerEmail = "";
        java.lang.String _addMeeting_uid = "";
        long _addMeeting_sequence = 0;
        javax.xml.datatype.XMLGregorianCalendar _addMeeting_utcDateStamp = null;
        java.lang.String _addMeeting_title = "";
        java.lang.String _addMeeting_location = "";
        javax.xml.datatype.XMLGregorianCalendar _addMeeting_utcDateStart = null;
        javax.xml.datatype.XMLGregorianCalendar _addMeeting_utcDateEnd = null;
        boolean _addMeeting_nonGregorian = false;
        com.microsoft.schemas.sharepoint.soap.meetings.AddMeetingResponse.AddMeetingResult _addMeeting__return = port.addMeeting(_addMeeting_organizerEmail, _addMeeting_uid, _addMeeting_sequence, _addMeeting_utcDateStamp, _addMeeting_title, _addMeeting_location, _addMeeting_utcDateStart, _addMeeting_utcDateEnd, _addMeeting_nonGregorian);
        System.out.println("addMeeting.result=" + _addMeeting__return);


        }
        {
        System.out.println("Invoking updateMeetingFromICal...");
        java.lang.String _updateMeetingFromICal_icalText = "";
        boolean _updateMeetingFromICal_ignoreAttendees = false;
        com.microsoft.schemas.sharepoint.soap.meetings.UpdateMeetingFromICalResponse.UpdateMeetingFromICalResult _updateMeetingFromICal__return = port.updateMeetingFromICal(_updateMeetingFromICal_icalText, _updateMeetingFromICal_ignoreAttendees);
        System.out.println("updateMeetingFromICal.result=" + _updateMeetingFromICal__return);


        }

        System.exit(0);
    }

}
